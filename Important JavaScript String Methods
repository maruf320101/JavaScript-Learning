charAt(index): একটি স্ট্রিং-এর নির্দিষ্ট পজিশনে (index) কোন ক্যারেক্টারটি আছে তা বের করে।
let text = "Hello";
console.log(text.charAt(0)); // আউটপুট: "H"
......................................................................................................................................
charCodeAt(index): নির্দিষ্ট পজিশনের ক্যারেক্টারটির Unicode মান (UTF-16 code) দেখায়।
let text = "Hello";
console.log(text.charCodeAt(0)); // আউটপুট: 72 (H এর Unicode মান)
......................................................................................................................................
at(index): এটি charAt() এর মতোই কাজ করে, তবে এটি নেগেটিভ ইনডেক্সও সাপোর্ট করে (শেষ থেকে গণনা করার জন্য)।
let text = "Hello";
console.log(text.at(-1)); // আউটপুট: "o"
......................................................................................................................................
indexOf(searchValue): একটি স্ট্রিং-এর মধ্যে নির্দিষ্ট কোনো শব্দ বা অক্ষর প্রথম কোথায় আছে, তার ইনডেক্স নম্বর দেখায়। খুঁজে না পেলে -1 রিটার্ন করে।
let sentence = "I love JavaScript";
console.log(sentence.indexOf("love")); // আউটপুট: 2
......................................................................................................................................
lastIndexOf(searchValue): indexOf এর মতো, কিন্তু এটি শেষ থেকে খোঁজা শুরু করে।
let sentence = "JavaScript is great, I love JavaScript";
console.log(sentence.lastIndexOf("JavaScript")); // আউটপুট: 29
......................................................................................................................................
includes(searchValue): স্ট্রিং-এর মধ্যে নির্দিষ্ট কোনো শব্দ বা অক্ষর আছে কি না তা চেক করে এবং true বা false রিটার্ন করে।
let sentence = "Hello world";
console.log(sentence.includes("world")); // আউটপুট: true
......................................................................................................................................
startsWith(searchValue): স্ট্রিং-টি নির্দিষ্ট কোনো শব্দ বা অক্ষর দিয়ে শুরু হয়েছে কি না তা চেক করে।
let text = "Good morning";
console.log(text.startsWith("Good")); // আউটপুট: true
......................................................................................................................................
endsWith(searchValue): স্ট্রিং-টি নির্দিষ্ট কোনো শব্দ বা অক্ষর দিয়ে শেষ হয়েছে কি না তা চেক করে।
let text = "file.pdf";
console.log(text.endsWith(".pdf")); // আউটপুট: true
......................................................................................................................................
slice(start, end): একটি স্ট্রিং-এর নির্দিষ্ট অংশ কেটে নতুন একটি স্ট্রিং তৈরি করে।
let text = "Apple, Banana, Kiwi";
let fruit = text.slice(7, 13);
console.log(fruit); // আউটপুট: "Banana"
......................................................................................................................................
substring(start, end): slice এর মতোই কাজ করে, কিন্তু নেগেটিভ ইনডেক্স সাপোর্ট করে না।
let text = "Hello world";
let part = text.substring(0, 5);
console.log(part); // আউটপুট: "Hello"
......................................................................................................................................
split(separator): একটি স্ট্রিং-কে নির্দিষ্ট separator (যেমন: স্পেস, কমা) দিয়ে ভাগ করে একটি অ্যারে (Array) তৈরি করে।
let message = "I am learning JS";
let words = message.split(" ");
console.log(words); // আউটপুট: ["I", "am", "learning", "JS"]
......................................................................................................................................
replace(searchValue, newValue): স্ট্রিং-এর কোনো অংশকে নতুন কোনো শব্দ বা অক্ষর দিয়ে পরিবর্তন করে। এটি শুধু প্রথম মিলটি পরিবর্তন করে।
let text = "I like Microsoft!";
let newText = text.replace("Microsoft", "Google");
console.log(newText); // আউটপুট: "I like Google!"
......................................................................................................................................
replaceAll(searchValue, newValue): স্ট্রিং-এর মধ্যে থাকা সকল মিলকে পরিবর্তন করে।
let text = "cat, dog, cat";
let newText = text.replaceAll("cat", "monkey");
console.log(newText); // আউটপুট: "monkey, dog, monkey"
......................................................................................................................................
toUpperCase(): স্ট্রিং-এর সব অক্ষরকে বড় হাতের (uppercase) করে দেয়।
let name = "john doe";
console.log(name.toUpperCase()); // আউটপুট: "JOHN DOE"
......................................................................................................................................
toLowerCase(): স্ট্রিং-এর সব অক্ষরকে ছোট হাতের (lowercase) করে দেয়।
let name = "JOHN DOE";
console.log(name.toLowerCase()); // আউটপুট: "john doe"
......................................................................................................................................
concat(string2, string3, ...): দুই বা ততোধিক স্ট্রিং-কে একসাথে যুক্ত করে। + অপারেটর দিয়েও একই কাজ করা যায়।
let text1 = "Hello";
let text2 = " World";
let fullText = text1.concat(text2);
console.log(fullText); // আউটপুট: "Hello World"
......................................................................................................................................
trim(): স্ট্রিং-এর শুরু এবং শেষের অপ্রয়োজনীয় স্পেস (whitespace) মুছে দেয়।
let email = "  user@example.com  ";
console.log(email.trim()); // আউটপুট: "user@example.com"
......................................................................................................................................
স্ট্রিং-এর দৈর্ঘ্য (String Length) বের করার নিয়ম
let myString = "Hello, World!";
let lengthOfString = myString.length;
console.log(lengthOfString); // আউটপুট হবে: 13
......................................................................................................................................
অ্যারে-এর দৈর্ঘ্য (Array Length) বের করার নিয়ম
let fruits = ["Apple", "Banana", "Orange", "Mango"];
let numberOfFruits = fruits.length;
console.log(numberOfFruits); // আউটপুট হবে: 4
......................................................................................................................................










